name: Production-Deployment
on:
  pull_request:
    types:
      - closed
    branches:
      - prod
jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo The PR was merged
  run_build:
    name: client-server build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: cd client
      - run: npm i --legacy-peer-deps
      - run: npm run build --if-present
      - run: cd ../
      - run: cd server
      - run: npm i
      - run: npm run build --if-present
  run_server_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST_NAME }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_SECRET }}
          port: ${{ secrets.PORT }}
          script: |
            ${{ secrets.CD_SERVER }}
            rm -rf node_modules
            npm i -verbose
            ${{ secrets.PM2 }} delete all
            ${{ secrets.PM2 }} start
  run_client_deploy:
    needs: run_server_deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: clone repository to deploy action 
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: | 
          cd client
          npm i --legacy-peer-deps
          echo ${{ secrets.PROD_ENV }} > .env
          npm run build --verbose
      - uses: appleboy/ssh-action@v1.0.0
      - name: delete build and create new 
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd research/client
            rm -rf build
            mkdir build
      - name: rysnc build directory 
      - uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avzr
          remote_host: ${{ secrets.SSH_HOST_NAME }}
          remote_user: ${{ secrets.SSH_USER }}
          remote_key: ${{ secrets.SSH_SECRET }}
          path: /client/build
          remote_path: ${{ secrets.CD_CLIENT }}
